
@using ChartJS.Helpers.MVC;

@model WebSiteTester.BLL.Dtos.TestDto

@{
    ViewBag.Title = "Tester";
}

<form method="get" action="/Home/Start" class="form col-12 text-center m-2">
    <label>Input site url to find sitemap</label>
    <div class="form-inline justify-content-center p-0">
        <input type="text" value="@ViewBag.Url" name="Url" class="col col-md-6 rounded-left border-primary border p-2" placeholder="Url" />
        <input type="submit" value="Start" class="btn-primary col-3 col-md-2  rounded-right border-primary border  p-2" />
    </div>
    <span class="small text-center ml-0 mr-0">
        For example:
        <a href="/Home/Example?url=https://www.ukad-group.com/">https://www.ukad-group.com/ , </a>
        <a href="/Home/Example?url=https://www.docker.com/">https://www.docker.com/</a>
    </span>
</form>


@{
    if (ViewBag.Error != null)
    {
        <div class="alert alert-danger text-center">@ViewBag.Error</div>
    }
}

<div class="col-12">
    @{
        if (Model != null)
        {
            <h2>@Model.Url</h2>
            <div id="accordion" class="shadow">
                <div class="card">
                    <div class="card-header" id="headingOne">
                        <h5 class="mb-0">
                            <button class="btn btn-link" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                Result chart
                            </button>
                        </h5>
                    </div>

                    <div id="collapseOne" class="collapse show" aria-labelledby="headingOne" data-parent="#accordion">
                        <div class="card-body">
                            @Html.ChartJS("ChartCanvas", (ChartTypeBar)ViewBag.ChartObj, "", "fill")
                        </div>
                    </div>
                </div>
            </div>
            <table class="table">
                <thead class="thead-light">
                    <tr>
                        <th scope="col">ID</th>
                        <th scope="col">Page</th>
                        <th scope="col">Min</th>
                        <th scope="col">Last</th>
                        <th scope="col">Max</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in @Model.Pages)
                    {
                        <tr>
                            <th scope="row">@item.Id</th>
                            <td>@item.Url</td>
                            <td>@item.Results.Min(x => x.ResponseTime)</td>
                            <td>@item.Results.Last().ResponseTime</td>
                            <td>@item.Results.Max(x => x.ResponseTime)</td>
                            <td><a class="btn btn-primary float-right p-1" href="/History/Results?id=@item.Id">Show all results</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }

</div>






